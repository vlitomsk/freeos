#summary Манул по ATA PIO

= Мануал по ATA PIO =

После очередного переписывания заработал ATA. Вот вкратце про него.

= Кратец =

Инициализировать там особо ничего не надо, нужно только выбрать канал (0 или 1), и установить таймаут (в моментах каких-то, в 1/18 секунды - много(ведь в timer.h минимальное время - 1/18 секунды, так?)).

*#include <ata.h>*

*set_channel(0);*

*set_timeout(1000);*

Вот так. Теперь о самом чтении-записи. Есть такая чудесная структура:

*struct ata_rw_info {*

*	u32 lba;*

*	u32 lba2;*

*	u32 count;*

*	u8 buff; // !! Внимание, тут УКАЗАТЕЛЬ НА u8, просто Вики режет понимает звездочку как ужирнение шрифта*

*};*

В lba лежит адрес (!пока 28-битный!) на винте, с которого начинать чтение. (На будущее: если 48-битный будет адрес, то в lba - младшие 32, в lba2 - остальные, постарше которые :))

u32 count - сколько читать информации (в байтах)

u8 buff - буфер для чтения-записи. Если читаем, то выделять под него память не нужно. // !! помним про шрифт

После заполнения структуры можно запускать процедуру.

*extern int ata_read(int device, struct ata_rw_info r_info); // опять шрифт, тут указатель на struct ata_rw_info*

*extern int ata_write(int device, struct ata_rw_info w_info); // --=--, указатель на struct ata_rw_info*

Еще. На каждом канале есть по 2 устройства - MASTER и SLAVE. В хидере объявлены DEVICE_MASTER и DEVICE_SLAVE. Вот одну из этих констант нужно запихивать в device.

Возвращают 0, если нет ошибок никаких.